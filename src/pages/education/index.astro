---
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import Container from "@components/Container.astro";
import { EDUCATION } from "@consts";

const educationEntries = await getCollection("education");

const renderedEntries = await Promise.all(
  educationEntries
    .sort((a, b) => {
      if (a.data.type === 'education' && b.data.type === 'education') {
        if (!a.data.dateStart || !b.data.dateStart) return 0;
        return b.data.dateStart - a.data.dateStart;
      }
      if ((a.data.type === 'certification' || a.data.type === 'certificate') && 
          (b.data.type === 'certification' || b.data.type === 'certificate')) {
        const priorityA = a.data.priority ?? 999;
        const priorityB = b.data.priority ?? 999;
        return priorityA - priorityB;
      }
      if (a.data.type === 'education') return -1;
      if (b.data.type === 'education') return 1;
      return a.data.type === 'certification' ? -1 : 1;
    })
    .map(async (entry) => {
      const { Content } = await entry.render();
      return { ...entry, Content };
    })
);

const tableOfContents = [
  { title: "Education", id: "education" },
  { title: "Certifications", id: "certifications" },
  { title: "Certificates", id: "certificates" },
];
---

<Layout title={EDUCATION.TITLE} description={EDUCATION.DESCRIPTION}>
  <Container>
    {/* Table of Contents */}
    <details open class="animate rounded-lg border border-black/15 dark:border-white/20">
      <summary class="cursor-pointer rounded-t-lg px-3 py-1.5 font-medium transition-colors hover:bg-black/5 dark:hover:bg-white/5 bg-black/5 dark:bg-white/5">
        Table of Contents
      </summary>
      <nav>
        <ul class="py-3">
          {tableOfContents.map((item) => (
            <li class="list-inside list-disc px-6 py-1.5 text-sm">
              <a href={`#${item.id}`} target="_self" class="inline-block decoration-black/30 dark:decoration-white/30 hover:decoration-black/50 focus-visible:decoration-black/50 dark:hover:decoration-white/50 dark:focus-visible:decoration-white/50 text-current hover:text-black focus-visible:text-black dark:hover:text-white dark:focus-visible:text-white transition-colors duration-300 ease-in-out underline underline-offset-[3px]">
                {item.title}
              </a>
            </li>
          ))}
        </ul>
      </nav>
    </details>

    <aside data-pagefind-ignore>
      <br/><br/>
      {/* Divider */}
      <hr class="border-t border-zinc-200 dark:border-zinc-700" />
      <br/><br/>
      {/* Education Section */}
      <div id="education" class="space-y-6">
        <h2 class="animate text-lg font-semibold text-zinc-800 dark:text-zinc-200 underline underline-offset-4">
          Education
        </h2>
        <ul class="animate not-prose flex flex-col gap-8">
          {renderedEntries
            .filter(entry => entry.data.type === 'education')
            .map(entry => (
              <li class="space-y-2">
                {entry.data.dateStart && (
                  <div class="text-sm text-zinc-500 dark:text-zinc-400">
                    {entry.data.dateStart} - {entry.data.dateEnd}
                  </div>
                )}
                <div class="text-lg text-zinc-800 dark:text-zinc-100">{entry.data.institution}</div>
                <div class="text-zinc-500 dark:text-zinc-400">
                  {entry.data.degree} in {entry.data.field}
                </div>
                {entry.data.gpa && (
                  <div class="text-zinc-500 dark:text-zinc-400">GPA: {entry.data.gpa.toFixed(2)}</div>
                )}
                <div class="prose dark:prose-invert">
                  <entry.Content />
                </div>
              </li>
            ))}
        </ul>
      </div>
      <br/><br/>
      {/* Divider */}
      <hr class="border-t border-zinc-200 dark:border-zinc-700" />
      <br/><br/>
      {/* Certifications Section */}
      <div id="certifications" class="space-y-6">
        <h2 class="animate text-lg font-semibold text-zinc-800 dark:text-zinc-200 underline underline-offset-4">
          Certifications
        </h2>
        <ul class="animate not-prose flex flex-col gap-8">
          {renderedEntries
            .filter(entry => entry.data.type === 'certification')
            .map(entry => (
              <li class="space-y-2">
                <div class="text-lg text-zinc-800 dark:text-zinc-100">{entry.data.institution}</div>
                <div class="text-zinc-500 dark:text-zinc-400">{entry.data.degree}</div>
                <div class="prose dark:prose-invert">
                  <entry.Content />
                </div>
              </li>
            ))}
        </ul>
      </div>
      <br/><br/>
      {/* Divider */}
      <hr class="border-t border-zinc-200 dark:border-zinc-700" />
      <br/><br/>
      {/* Certificates Section */}
      <div id="certificates" class="space-y-6">
        <h2 class="animate text-lg font-semibold text-zinc-800 dark:text-zinc-200 underline underline-offset-4">
          Certificates
        </h2>
        <ul class="animate not-prose flex flex-col gap-8">
          {renderedEntries
            .filter(entry => entry.data.type === 'certificate')
            .map(entry => (
              <li class="space-y-2">
                <div class="text-lg text-zinc-800 dark:text-zinc-100">{entry.data.institution}</div>
                <div class="text-zinc-500 dark:text-zinc-400">{entry.data.degree}</div>
                <div class="prose dark:prose-invert">
                  <entry.Content />
                </div>
              </li>
            ))}
        </ul>
      </div>
    </aside>
  </Container>
</Layout>